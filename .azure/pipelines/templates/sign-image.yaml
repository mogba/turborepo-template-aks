parameters:
  appName: ""
  imageDigest: ""
  containerRegistryAddress: ""
  azureKeyVaultAddress: ""
  azureTenantId: ""
  azureSubscriptionName: ""
  azureClientId: ""
  azureClientSecret: ""
  imageSignKey: ""
  buildTag: ""

steps:
  - script: |
      curl -sL https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64 --output cosign
      chmod +x cosign
      mv cosign /usr/local/bin/
    displayName: "Install Cosign"

  - task: AzureCLI@2
    inputs:
      azureSubscription: ${{ parameters.azureSubscriptionName }}
      scriptType: "bash"
      scriptLocation: "inlineScript"
      inlineScript: |
        az acr login -n ${{ parameters.containerRegistryAddress }}
        echo "##vso[task.setvariable variable=imageDigest]$(az acr repository show --name ${{ parameters.containerRegistryAddress }} --image ${{ parameters.appName }}:${{ parameters.buildTag }} --query digest --output tsv)"
    displayName: "Generate session for cosign to communicate with ACR and obtain digest"

  - script: |
      cosign sign --key azurekms://${{ parameters.azureKeyVaultAddress }}/${{ parameters.imageSignKey }} --tlog-upload=false ${{ parameters.containerRegistryAddress }}/${{ parameters.appName }}@${{ parameters.imageDigest }}
    env:
      AZURE_TENANT_ID: ${{ parameters.azureTenantId }}
      AZURE_CLIENT_ID: ${{ parameters.azureClientId }}
      AZURE_CLIENT_SECRET: ${{ parameters.azureClientSecret }}
    displayName: "Sign the container image and store the signature in the registry"

  - script: |
      cosign verify --key azurekms://${{ parameters.azureKeyVaultAddress }}/${{ parameters.imageSignKey }} --insecure-ignore-tlog ${{ parameters.containerRegistryAddress }}/${{ parameters.appName }}:${{ parameters.buildTag }}
    env:
      AZURE_TENANT_ID: ${{ parameters.azureTenantId }}
      AZURE_CLIENT_ID: ${{ parameters.azureClientId }}
      AZURE_CLIENT_SECRET: ${{ parameters.azureClientSecret }}
    displayName: "Validate the container image is signed with the right key"
